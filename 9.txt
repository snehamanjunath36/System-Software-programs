#include<stdio.h>
int i,j,nop,pages[50],frame[10],nof,k,avail,counter=0;
int faults=0;
void FIFO();
void LRU();
int main()
{
int choice;
printf("enter no of pages");
scanf("%d",&nop);
printf("enter  page  number ");
for(i=0;i<nop;i++)
scanf("%d",&pages[i]);
printf("\n enter the no of frames ");
scanf("%d",&nof);
for(i=0;i<nof;i++)
frame[i]=-1;
tryagain:
printf("page replacement algorithm:\n\n 1.FIFO    2.LRU     3.exit \n");
scanf("%d",&choice);
switch(choice)
{
case 1:FIFO(); break;
case 2:LRU(); break;
case 3:return 0;
default:printf(" wrong choice try again");
goto tryagain;
}}


void FIFO()
{
j=0;
printf("refstring \t pageframes \n");
for(i=0;i<nop;i++){
printf("%d \t\t",pages[i]);
avail=0;
for(k=0;k<nof;k++);
if(frame[k]==pages[i])
avail=1;
if(avail==0)
{
frame[j]=pages[i];
j=(j+1)%nof;
faults++;
for(k=0;k<nof;k++)
printf("%d\t",frame[k]);
}
printf("\n");
}
printf("PAGE FAULT IS %d ",faults);
}
int findLRU(int time[],int n)
{
int i, min=time[0],pos=0;
for(i=1;i<n;i++){
if(time[i]<min){
min=time[i];
pos=i;
}}
return pos;
}
   
   
   
void LRU()
{
    int flag1,flag2;
    int time[15],pos;
    printf("ref string\t page frames\n");
    for(i=0;i<nop;i++)
    {
    printf("%d\t\t",pages[i]);
    flag1=flag2=0;
    avail=0;
    for(j=0;j<nof;j++)
    {
    if(frame[j]==pages[i])
    {
    counter++;
   
    time[j]=counter;
    flag1=flag2=1;
    avail=1;
    break;
    }
    }
    if(flag1==0)
    {
    for(j=0;j<nof;j++)
    {
    if(frame[j]==-1)
    {
    counter++;
    faults++;
    frame[j]=pages[i];
    time[j]=counter;
    flag2=1;
    break;
    }
    }
   
    }

if(flag2==0)
{
pos=findLRU(time,nof);
counter++;
faults++;
frame[pos]=pages[i];
time[pos]=counter;
}
if(!avail)
for(j=0;j<nof;j++)
{
printf("%d\t",frame[j]);
}
printf("\n");

}
printf("\n\ntotal page faults=%d",faults);
}