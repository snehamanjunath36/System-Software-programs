#include<stdio.h>
int endTime,i,smallest;
int count,j,n,time,remain,flag=0,time_quantum;
int wait_time=0,turnaround_time=0,at[10],bt[10],rt[10];
void RR();
void SRTF();

int main()
{
	int choice;
	printf("Enter total process:\t");
	scanf("%d",&n);
	remain=n;
	for(count=0;count<remain;count++)
	{
		printf("\nEnter arrival time and burst time for process number %d:",count+1);
		scanf("%d",&at[count]);
		scanf("%d",&bt[count]);
		rt[count]=bt[count];
	}
	tryagain:
	printf("scheduling alg :\n\n1)Round Robin 2)Shortest Remaining Time First(SRTf) 3)Exit\n");
	scanf("%d",&choice);
	switch(choice)
	{
		case 1:RR();
			break;
		case 2:SRTF();
			break;
		case 3:return 0;
		default:printf("wromg choice try again!!!");
			goto tryagain;
	 }
}

void RR()
{
	printf("Enter Time Quantum:\t");
	scanf("%d",&time_quantum);
	printf("\n\nprocess\t|Turnaround Time|Waiting Time\n\n");
	for(time=0,count=0;remain!=0;)
	{
		 if(rt[count]<=time_quantum && rt[count]>0)
		{
			 time+=rt[count];
			 rt[count]=0;
			 flag=1;
		}
		else if(rt[count]>0)
		{
			 rt[count]-=time_quantum;
			 time+=time_quantum;
		}
		if(rt[count]==0 && flag==1)
		{
			 remain--;
			 printf("p[%d]\t|\t%d\t|\t%d\n",count+1,time-at[count],time-at[count]-bt[count]);
			 wait_time+=time-at[count]-bt[count];
			 turnaround_time+=time-at[count];
			 flag=0;
		}
		if(count==n-1)
			count=0;
		else if(at[count+1]<=time)
			count++;
		else
			count=0;
	}
	printf("\nAverage Waiting Time=%f\n",wait_time*1.0/n);
	printf("Avg Turnaround Time=%f",turnaround_time*1.0/n);
}

void SRTF()
{
	 remain=0;
	 printf("\n\nProcess\t|Turnaround Time|Waiting Time\n\n");
	 rt[9]=9999;
	 for(time=0;remain!=n;time++)
	{
		 smallest=9;
		 for(i=0;i<n;i++)
		 {
			  if(at[i]<=time && rt[i]<rt[smallest] && rt[i]>0)
			  {
			   smallest=i;
			  }
		 }
		 rt[smallest]--;
		 if(rt[smallest]==0)
		 {
			  remain++;
			  endTime=time+1;
			  printf("\np[%d]\t|\t%d\t|\t%d",smallest+1,endTime-at[smallest],endTime-bt[smallest]-at[smallest]);
			  wait_time+=endTime-bt[smallest]-at[smallest];
			  turnaround_time+=endTime-at[smallest];
		 }
	}
	printf("\n\navg waiting time=%f\n",wait_time*1.0/n);
	printf("avg turnaround time=%f",turnaround_time*1.0/5);
}